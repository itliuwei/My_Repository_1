
用git diff HEAD -- readme.txt命令可以查看工作区和版本库里面最新版本的区别
git checkout -- file  //从 暂存区 or 版本库 恢复指定文件(暂存区优先,删了的也可以恢复,只要暂存区或者版本库有副本就可以)
git reset HEAD file  // 将指定文件从暂存区里撤销(删除)

git add <file>
git commit -m "description"

# 使本地仓库关联远程仓库(适用于先有本地仓库,再有远程仓库)
git remote add origin git@github.com:michaelliao/learngit.git
# 更换本地仓库关联的远程仓库
git remote set-url origin git@github.com:itliuwei/test.git
# 将本地master分支的内容推送到远程仓库
git push
# 将本地master分支的内容推送到远程仓库,并且合并
git push -u origin master
# 使用powershell创建自己的SSH秘钥
ssh-keygen -t rsa -C "这里写你GitHub注册邮箱"
# 将远程仓库同步到本地(适用于先有远程仓库)
git clone git@github.com:itliuwei/My_Repository_1.git
# 创建并切换到指定分支
git checkout -b dev
# 创建指定分支
git branch dev
# 切换指定分支
git checkout dev
# 查看当前分支
git branch
# 合并某分支到当前分支
git merge dev
# 不使用快速合并,会生成一个commit,所以要写上提交信息
git merge --no-ff -m "merge with no-ff" dev
# 用带参数的git log也可以看到分支的合并情况
git log --graph --pretty=oneline --abbrev-commit
# 可以看到分支合并图
git log --graph
# 删除分支
git branch -d feature1
# 强制删除没有合并的分支
git branch -D feature-vulcan
# 将当前分支的任务藏起来
git stash
# 查看当前分支所有的隐藏任务
git stash list
# 恢复某个隐藏任务
git stash apply
# 删除某个隐藏任务的存储点
git stash drop
# 恢复隐藏任务并删除存储点
git stash pop
# 查看远程库的信息
git remote [-v]
# 推送分支(后面可以指定分支)
git push origin master